{
  "swagger" : "2.0",
  "info" : {
    "description" : "API Genichips From Github",
    "version" : "1.0.0",
    "title" : "API Genichips",
    "termsOfService" : "https:/localhost/",
    "contact" : {
      "email" : "daitv73@gmail.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "virtserver.swaggerhub.com",
  "basePath" : "/quando1910/safety-train/1.0.0",
  "tags" : [ {
    "name" : "user",
    "description" : "Operations about user",
    "externalDocs" : {
      "description" : "Find out more about our store",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "health",
    "description" : "Operations about user",
    "externalDocs" : {
      "description" : "Find out more about our store",
      "url" : "http://swagger.io"
    }
  } ],
  "schemes" : [ "https", "http" ],
  "paths" : {
    "/checkhealth" : {
      "get" : {
        "tags" : [ "health" ],
        "summary" : "load User",
        "description" : "Load all the user on the table",
        "operationId" : "LoadUser",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/auth/register" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Create user",
        "description" : "This can only be done by the logged in user",
        "operationId" : "createUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Only admin can load and config this page",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Created user object, and insert information",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User_no_id"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : " create user successfull",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "400" : {
            "description" : "this is for wrong format, or lack parameters",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "401" : {
            "description" : "Authorization request",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "406" : {
            "description" : "User_name exist",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/api/v1/users/" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "load User",
        "description" : "Load all the user on the table",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Only admin can load and config this page",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/User"
              }
            }
          },
          "401" : {
            "description" : "Authorization request",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/auth/login" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Logs user into the system",
        "description" : "",
        "operationId" : "loginUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Pet object that needs to be added to the store",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User_Login"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/User_token"
            }
          },
          "400" : {
            "description" : "Invalid username/password supplied",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/api/v1/users/{id}" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Get user by id",
        "description" : "",
        "operationId" : "getUserByName",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Only admin can load and config this page",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The name that needs to be fetched. Use user1 for testing. ",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "401" : {
            "description" : "Authorization request",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "400" : {
            "description" : "Invalid id supplied",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "user" ],
        "summary" : "Updated user",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "updateUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Only admin can load and config this page",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "name that need to be updated",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Updated user object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User_no_id"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "401" : {
            "description" : "Authorization request",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "400" : {
            "description" : "Invalid id supplied",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "404" : {
            "description" : "Wrong parameters",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "user" ],
        "summary" : "Delete user",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "deleteUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Only admin can load and config this page",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The name that needs to be deleted",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "401" : {
            "description" : "Authorization request",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "400" : {
            "description" : "Invalid id supplied",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "petstore_auth" : {
      "type" : "oauth2",
      "authorizationUrl" : "http://petstore.swagger.io/oauth/dialog",
      "flow" : "implicit",
      "scopes" : {
        "write:pets" : "modify pets in your account",
        "read:pets" : "read your pets"
      }
    },
    "api_key" : {
      "type" : "apiKey",
      "name" : "api_key",
      "in" : "header"
    }
  },
  "definitions" : {
    "User" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "username" : {
          "type" : "string"
        },
        "fullname" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "department" : {
          "type" : "string"
        },
        "role_id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "phone" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "User"
      }
    },
    "User_no_id" : {
      "type" : "object",
      "properties" : {
        "username" : {
          "type" : "string"
        },
        "fullname" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "department" : {
          "type" : "string"
        },
        "role_id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "phone" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "User_no_id"
      }
    },
    "User_Login" : {
      "type" : "object",
      "properties" : {
        "username" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "User_Login"
      }
    },
    "User_token" : {
      "type" : "object",
      "properties" : {
        "Authorization" : {
          "type" : "string",
          "example" : "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhY2Nlc3NfaWQiOj",
          "description" : "Access token for APIs"
        },
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 12
        }
      },
      "xml" : {
        "name" : "User_token"
      }
    },
    "ApiResponse" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string",
          "description" : "Response description."
        }
      }
    }
  },
  "externalDocs" : {
    "description" : "Find out more about Swagger",
    "url" : "http://swagger.io"
  }
}
